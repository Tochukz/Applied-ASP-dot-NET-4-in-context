<?xml version="1.0" encoding="utf-8"?>

<!-- For more information on using web.config transformation visit https://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <!--
    In the example below, the "SetAttributes" transform will change the value of 
    "connectionString" to use "ReleaseSQLServer" only when the "Match" locator 
    finds an attribute "name" that has a value of "MyDB".
    -->
  <connectionStrings>
    <add name="MyDB" 
      connectionString="Data Source=TOCHUKWUN\CHUCKSDB;Initial Catalog=Sample1;Integrated Security=True" 
      xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
    
    <!--Using the Insert transformation-->
    <add name="NewConnection" connectionString="MyConnectionString" xdt:Transform="Insert" />
    
    <!-- Using the InsertBefore and InsertAfter transformations-->
    <add name="SecondConnection" connectionString="MySecondConnectionString" xdt:Transform="InsertBefore(/configuration/connectionStrings/add[@name='MyDB'])" />
    <add name="OtherConnection" connectionString="MyOtherConnectionString" xdt:Transform="InsertAfter(/configuration/connectionStrings/add[@name='SecondConnection'])" />
    
    <!--Using the SetAttribute and RemoveAttribute Transformations-->
    <add name="EFRepository" xdt:Transform="SetAttributes(connectionString)" connectionString="MyNewConnection" />
 
    <!--Using Locator attribute wth compound Condition model-->
    <add xdt:Transform="SetAttribute(connectionString)" connectionString="MyConnection" xdt:Locator="Condition(starts-with(@name, 'EF') and contains(@providerName, SqlClinet))"/>
    
    <!--Using Locator attribute with XPath model-->
    <add xdt:Transform="SetAttributes(connectionString)" connectionString="MyConnection" 
         xdt:Locator="XPath(/configuration/connectionStrings/add[starts-with(@name, 'EF') and contains(@providerName, 'SqlClient')])"/>
    
    <!--Using Locator attribute with Match mode-->
    <add xdt:Transform="SetAttributes(connectionString)" connectionString="MyConnection" 
         xdt:Locator="Match(name, providerName)" name="EFRepository" providerName="System.Data.SQLClient" />
    <!--Match mode takes one or more attribute names and will match against elements that have the same values for the named attributes and have the same path-->
    <!--The above transformation will match those elements that have the path /configuration/connectionStrings/add, have a name attribute value of EFRepository, 
    and have a providerName attribute value of System.Data.EntityClient.-->
    
  </connectionStrings>
  
  <!--Replaceing Elements with Replace transform -->
  <connectionStrings xdt:Transform="Replace">
    <add name="MyFirstConnection" connectionString="MyConnection1"/>
    <add name="MySecondConnetction" connectionString="MyConnection2" />
    <add name="MyThirdConnection" connectionString="MyConnection3"/>
  </connectionStrings>
  
  <system.web>
    <!--Using the SetAttribute and RemoveAttribute Transformations-->
    <compilation xdt:Transform="RemoveAttributes(targetFramework)" />
    
    <compilation xdt:Transform="RemoveAttributes(debug)" />
    <!--Using the Remove transformation to remove configuration Element-->
    <compilation>
      <assemblies>
        <!--This remove transformation matches all the add elements in the assembly region-->
        <!--This will remove only the first matching element. To remove all matching element use the RemoveAll transformation-->
        <add xdt:Transform="Remove" />
        <!--Use Locator attribute to target specific element. The target here is an <add> element having [assemble] attribute with the value of 'Helpers'-->
        <add xdt:Transform="Remove" xdt:Locator="Condition(contains(@assembly, 'Helpers'))"/>
        <!--
          The Locator Attribute have 3 modes:
          1. xdt:Locator="Condition(Expression) 
          2. xdt:Locator="XPath(/root/parent/child) . We can use xpath operators such as 'contains', 'starts-with', 'or', and 'and'
          3. xdt:Locator="Match(attribute name)
          Get the details of XPath at www.w3.org/TR/xpath.
        -->
      </assemblies>
    </compilation>
    <!--
      In the example below, the "Replace" transform will replace the entire 
      <customErrors> section of your web.config file.
      Note that because there is only one customErrors section under the 
      <system.web> node, there is no need to use the "xdt:Locator" attribute.
      
      <customErrors defaultRedirect="GenericError.htm"
        mode="RemoteOnly" xdt:Transform="Replace">
        <error statusCode="500" redirect="InternalError.htm"/>
      </customErrors>
    -->
  </system.web>
</configuration>